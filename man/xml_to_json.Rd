% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xml2json.R
\name{xml_to_json}
\alias{xml_to_json}
\title{Convert XML to JSON}
\usage{
xml_to_json(doc, spaces = 0, compact = FALSE, trim = FALSE,
  nativeType = FALSE, addParent = FALSE, alwaysArray = FALSE,
  alwaysChildren = FALSE, instructionHasAttributes = FALSE,
  ignoreDeclaration = FALSE, ignoreInstruction = FALSE,
  ignoreAttributes = FALSE, ignoreComment = FALSE, ignoreCdata = FALSE,
  ignoreDoctype = FALSE, ignoreText = FALSE)
}
\arguments{
\item{doc}{XML document (character)}

\item{spaces}{Number of spaces to be used for indenting JSON output. Default: \code{0}.}

\item{compact}{Whether to produce detailed object or compact object. Default \code{FALSE}.}

\item{trim}{Whether to trim whitespace characters that may exist before and after the text. Default \code{FALSE}.}

\item{nativeType}{Whether to attempt converting text of numerals or of boolean values to native type.  Default \code{FALSE}.}

\item{addParent}{Whether to add parent property in each element object that points to parent object. Default \code{FALSE}.}

\item{alwaysArray}{Whether to always put sub element, even if it is one only, as an item inside an array.  Default \code{FALSE}.}

\item{alwaysChildren}{Whether to always generate elements property even when there are no actual sub elements. Default \code{FALSE}.}

\item{instructionHasAttributes}{Whether to parse contents of Processing Instruction as attributes or not.  Default \code{FALSE}.}

\item{ignoreDeclaration}{Whether to ignore parsing declaration property. That is, no declaration property will be generated. Default \code{FALSE}.}

\item{ignoreInstruction}{Whether to ignore parsing processing instruction property.  Default \code{FALSE}.}

\item{ignoreAttributes}{Whether to ignore parsing attributes of elements.That is, no attributes property will be generated. Default \code{FALSE}.}

\item{ignoreComment}{Whether to ignore parsing comments of the elements. That is, no comment will be generated. Default \code{FALSE}.}

\item{ignoreCdata}{Whether to ignore parsing CData of the elements. That is, no cdata will be generated. Default \code{FALSE}.}

\item{ignoreDoctype}{Whether to ignore parsing Doctype of the elements. That is, no doctype will be generated. Default \code{FALSE}.}

\item{ignoreText}{Whether to ignore parsing texts of the elements. That is, no text will be generated. Default \code{FALSE}.}
}
\description{
Please reconsider your apparent desire to use this function.\cr
\cr
Automagic conversion of XML to JSON is \emph{rarely} a good idea and a path fraught
with peril. There are \emph{so many} options to tweak to ensure you get what you think
you want but likely truly want something else entirely, such as a more minimal
extract of the original XML file.\cr
\cr
Seriously consider parsing the XML then using \code{purrr} idioms to extract the data
you need into a proper \code{list} and \emph{then} call \code{jsonlite::toJSON()} on said \code{list}.
}
\examples{
xml <- '<?xml version="1.0" encoding="utf-8"?>
<note importance="high" logged="true">
    <title>Happy</title>
    <todo>Work</todo>
    <todo>Play</todo>
</note>'
xml_to_json(xml)
}
